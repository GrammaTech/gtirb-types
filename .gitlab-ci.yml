stages:
  - test
  - export

test_module:
  stage: test
  image: python:3.7-slim
  script:
    - pip install -r requirements-dev.txt
    - flake8 gtirb_types/
    - pip install -r requirements.txt --extra-index-url=$EXTRA_INDEX_URL
    - pip install .
    - pytest --cov=gtirb_types --cov-config=.coveragerc --cov-report=xml:coverage.xml --cov-report=term --junitxml=report.xml test
    - python3 setup.py build
  artifacts:
    when: always
    reports:
      junit: report.xml
      cobertura: coverage.xml
  tags:
    - kubernetes

# This job ensures that:
#   - Release branches never publish -dev packages, and packages
#     on release branches are never overwritten.  This behavior coincides
#     with that of the external export job, where on the public pypi, packages
#     cannot be overwritten.
#   - The default branch therefore only ever publishes '-dev' packages
#   - The -dev package on the default branch is always the newest version in the repository
export_internal:
  stage: export
  image: python:3.7-slim
  script:
    - pip install -r requirements-dev.txt
    - python3 setup.py bdist_wheel --dist-dir=$CI_PROJECT_DIR/dist
    - VERSION=$(python3 -c "from imp import load_source; pkginfo = load_source('pkginfo.version', 'gtirb_types/version.py'); print(pkginfo.__version__)")
    - if [[ "$VERSION" =~ \.dev[[:digit:]]*.*$ && "$CI_COMMIT_REF_NAME" =~ ^release-.* ]]; then
        echo "[ERROR] A development version cannot be exported to a release branch.";
        exit 1;
      fi
    # this job is not using $CI_JOB_TOKEN because it only has read access
    # https://gitlab.com/gitlab-org/gitlab/-/issues/35067
    # this job is also not using $CI_DEPLOY_USER and $CI_DEPLOY_PASSWORD because it only has write access
    - if [[ "$CI_COMMIT_BRANCH" == "${CI_DEFAULT_BRANCH}" ]]; then
        if [[ ! "$VERSION" =~ \.dev[[:digit:]]*$ ]]; then
          echo "[ERROR] On the ${CI_DEFAULT_BRANCH} branch, we must be exporting a -dev version.";
          exit 1;
        fi;
        if pip3 install --index-url=$EXTRA_INDEX_URL --no-dependencies "gtirb_types>$VERSION" 2>/dev/null; then
          echo "[ERROR] The package version in the repository cannot be more than the package version being published on ${CI_DEFAULT_BRANCH}.";
          exit 1;
        fi;
        ls $CI_PROJECT_DIR/dist/*.whl | xargs $CI_PROJECT_DIR/delete_remote_packages.py $GL_PKG_API_TOKEN;
      fi
    - sed "s/password = <access token>/password = $GL_PKG_API_TOKEN/" $CI_PROJECT_DIR/.pypirc > ~/.pypirc
    - python3 -m twine upload --verbose --repository repypi $CI_PROJECT_DIR/dist/*.whl
  tags:
    - kubernetes
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_REF_NAME =~ /^release-.*/'
